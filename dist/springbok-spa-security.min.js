!function(){"use-strict";const n=["ngCookies","springbok.core"],t=angular.module("springbok.security",n);t.run(["endpoints",function(n){n.add("accounts","accounts"),n.add("currentAccount","accounts/authenticated"),n.add("credentials","credentials")}])}(),function(){"use strict";function n(n,t,e,i,o){var r=this;r.session=e,this.login=function(){o.login().then(function(){n.$emit("Notify","success","SECURITY_LOGIN_SUCCESS"),n.$emit("AuthenticationChange"),_.isNull(i.url)||(t.path(i.url),i.url=null)},function(t){"wrongCredentials"===t.reason?n.$emit("Notify","error","SECURITY_LOGIN_INVALID"):n.$emit("Notify","error","ERROR_SERVER"),n.$emit("AuthenticationChange")})},this.logout=function(){o.logout(),r.account=o.account,n.$emit("Notify","warning","SECURITY_LOGIN_LOGOUT"),n.$emit("AuthenticationChange"),t.path("/")}}angular.module("springbok.security").controller("authenticationController",n),n.$inject=["$scope","$location","session","authenticationRedirect","authenticationService"]}(),function(){"use strict";angular.module("springbok.security").value("authenticationRedirect",{url:null})}(),function(){"use strict";function n(n,t,e,i,o,r){var c=this;c.logout=function(){delete t.defaults.headers.common.Authorization,o.clean(),r.clear(),e.clear()},c.login=function(){var r=n.defer();return e.setTokenAndExpiration(),t.get(i.get("currentAccount")).then(function(n){200===n.status&&(e.update(n.data),o.getCredentialsForUsername(e.account.username),r.resolve(n.infos))},function(n){c.logout(),403===n.status||401===n.status?r.reject({reason:"wrongCredentials"}):r.reject({reason:"serverError"})}),r.promise}}angular.module("springbok.security").service("authenticationService",n),n.$inject=["$q","$http","session","endpoints","credentialService","searchCriterias"]}(),function(){"use strict";function n(n,t,e){var i,o=[];return{getCredentialsForUsername:function(r){if(!_.isUndefined(o)&&o.length>0&&!_.isUndefined(i))return i;var c=e.defer(),a={params:{size:1e3,direction:"asc",properties:"label",username:r}};return t.get(n.get("credentials")+"/search",a).success(function(n){o=n.content,c.resolve(o)}),c.promise},hasCredential:function(n){var t=_.filter(o,function(t){return t.code===n});return t.length>0},setCredentials:function(n){o=n},clean:function(){o=[],i=null}}}angular.module("springbok.security").service("credentialService",n),n.$inject=["endpoints","$http","$q"]}(),function(){"use strict";function n(n){function t(){if(localStorage.account){var n=JSON.parse(localStorage.account);i.account=n}else e();return i.account}function e(){i.account={infos:{},username:"",password:"",expiration:null,authenticated:!1}}var i=this;i.defaultExpirationDurationInMilliseconds=36e5,i.account={},t(),i.persist=function(){localStorage.account=JSON.stringify(i.account)},i.update=function(n){i.account.infos=n,i.account.authenticated=!0,i.persist()},i.isExpired=function(){var n=!0,t=(new Date).getTime(),e=i.account.expiration;if(!_.isNull(e)&&!_.isUndefined(e)){var o=t-e;n=o>=i.defaultExpirationDurationInMilliseconds}return n},i.clear=function(){e(),localStorage.clear()},i.getCurrent=t,i.setTokenAndExpiration=function(){var t="Basic ";t+=n.encodeToBase64(i.account.username+":"+i.account.password),i.account.token=t,i.account.expiration=(new Date).getTime(),i.persist()},i.setDefaultExpirationDurationInMilliseconds=function(n){i.defaultExpirationDurationInMilliseconds=n}}angular.module("springbok.security").service("session",n),n.$inject=["encryptionUtils"]}();