!function(){"use-strict";const n=["ngCookies","springbok.core"],t=angular.module("springbok.security",n);t.run(["endpoints",function(n){n.add("accounts","accounts"),n.add("currentAccount","accounts/authenticated"),n.add("credentials","credentials")}])}(),function(){"use strict";function n(n,t,e){var r=this;r.account=t.account,this.login=function(){t.login(this.account.username,this.account.password).then(function(){_.isNull(n.url)||(e.path(n.url),n.url=null)})},this.logout=function(){t.logout(),n.url="/"}}angular.module("springbok.security").controller("authenticationController",n),n.$inject=["authenticationRedirect","authenticationService","$location"]}(),function(){"use strict";angular.module("springbok.security").value("authenticationRedirect",{url:null})}(),function(){"use strict";function n(n,t,e,r,c,i){function o(){a.account={infos:{},username:"",password:"",authenticated:!1}}function u(){var n="Basic ";return n+=e.encodeToBase64(a.account.username+":"+a.account.password)}var a=this;o(),a.logout=function(){o(),delete t.defaults.headers.common.Authorization,c.clean(),i.resetAllSearchCriterias()},a.login=function(){var e=n.defer();return t.defaults.headers.common.Authorization=u(),t.get(r.get("currentAccount")).then(function(n){200===n.status?(a.account.infos=n.data,a.account.authenticated=!0,c.getCredentialsForUsername(a.account.username),e.resolve(n.infos)):403===n.status||401===n.status?e.reject("Wrong username/password"):(a.logout(),e.reject("An error occured during login"))},function(){a.logout(),e.reject("An error occured during login")}),e.promise},a.getCurrentAccount=function(){return a.account.infos}}angular.module("springbok.security").service("authenticationService",n),n.$inject=["$q","$http","encryptionUtils","endpoints","credentialService","searchCriterias"]}(),function(){"use strict";function n(n,t,e){var r,c=[];return{getCredentialsForUsername:function(i){if(!_.isUndefined(c)&&c.length>0&&!_.isUndefined(r))return r;var o=e.defer(),u={params:{size:1e3,direction:"asc",properties:"label",username:i}};return t.get(n.get("credentials")+"/search",u).success(function(n){c=n.content,o.resolve(c)}),o.promise},hasCredential:function(n){var t=_.filter(c,function(t){return t.code===n});return t.length>0},setCredentials:function(n){c=n},clean:function(){c=[],r=null}}}angular.module("springbok.security").service("credentialService",n),n.$inject=["endpoints","$http","$q"]}();