!function(){"use-strict";const n=["ngCookies","springbok.core"],t=angular.module("springbok.security",n);t.run(["endpoints",function(n){n.add("accounts","accounts"),n.add("currentAccount","accounts/authenticated"),n.add("credentials","credentials")}])}(),function(){"use strict";function n(n,t,e,o){var i=this;i.account=e.account,this.login=function(){e.login().then(function(){n.$emit("Notify","success","SECURITY_LOGIN_SUCCESS"),n.$emit("AuthenticationChange"),_.isNull(t.url)||(o.path(t.url),t.url=null)},function(t){"wrongCredentials"===t.reason?n.$emit("Notify","error","SECURITY_LOGIN_INVALID"):n.$emit("Notify","error","ERROR_SERVER"),n.$emit("AuthenticationChange")})},this.logout=function(){e.logout(),i.account=e.account,n.$emit("Notify","warning","SECURITY_LOGIN_LOGOUT"),n.$emit("AuthenticationChange"),o.path("/")}}angular.module("springbok.security").controller("authenticationController",n),n.$inject=["$scope","authenticationRedirect","authenticationService","$location"]}(),function(){"use strict";angular.module("springbok.security").value("authenticationRedirect",{url:null})}(),function(){"use strict";function n(n,t,e,o,i,r){function c(){a.account={infos:{},username:"",password:"",authenticated:!1}}function u(){var n="Basic ";return n+=e.encodeToBase64(a.account.username+":"+a.account.password)}var a=this;a.account={},c(),a.logout=function(){c(),delete t.defaults.headers.common.Authorization,i.clean(),r.clear(),sessionStorage.clear()},a.login=function(){var e=n.defer();return sessionStorage.token=u(),console.log("loginToken",sessionStorage.token),t.get(o.get("currentAccount")).then(function(n){200===n.status&&(a.account.infos=n.data,a.account.authenticated=!0,i.getCredentialsForUsername(a.account.username),e.resolve(n.infos))},function(n){a.logout(),403===n.status||401===n.status?e.reject({reason:"wrongCredentials"}):e.reject({reason:"serverError"})}),e.promise},a.getCurrentAccount=function(){return a.account.infos}}angular.module("springbok.security").service("authenticationService",n),n.$inject=["$q","$http","encryptionUtils","endpoints","credentialService","searchCriterias"]}(),function(){"use strict";function n(n,t,e){var o,i=[];return{getCredentialsForUsername:function(r){if(!_.isUndefined(i)&&i.length>0&&!_.isUndefined(o))return o;var c=e.defer(),u={params:{size:1e3,direction:"asc",properties:"label",username:r}};return t.get(n.get("credentials")+"/search",u).success(function(n){i=n.content,c.resolve(i)}),c.promise},hasCredential:function(n){var t=_.filter(i,function(t){return t.code===n});return t.length>0},setCredentials:function(n){i=n},clean:function(){i=[],o=null}}}angular.module("springbok.security").service("credentialService",n),n.$inject=["endpoints","$http","$q"]}();