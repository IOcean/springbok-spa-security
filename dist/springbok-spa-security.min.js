!function(){"use-strict";const t=["ngCookies","springbok.core"],e=angular.module("springbok.security",t);e.run(["endpoints",function(t){t.add("login","authentication"),t.add("logout","logout"),t.add("authenticatedUser","accounts/authenticated"),t.add("credentialsSearch","credentials/search")}])}(),function(){"use strict";function t(t,e,o){this.user=e.user,this.login=function(){e.login(this.user.login,this.user.password),_.isNull(t.url)||(o.path(t.url),t.url=null)},this.logout=function(){e.logout(),t.url="/"}}angular.module("springbok.security").controller("authenticationController",t),t.$inject=["authenticationRedirect","authenticationService","$location"]}(),function(){"use strict";angular.module("springbok.security").value("authenticationRedirect",{url:null})}(),function(){"use strict";angular.module("springbok.security").provider("authenticationService",function(){var t={user:{login:"",password:"",auth:!1},authCookieName:"authentification"};this.setDefaultLogin=function(e){t.user.login=e},this.setDefaultPwd=function(e){t.user.password=e},this.setCookieName=function(e){t.authCookieName=e},this.$get=["endpoints","$http","$rootScope","$cookies","credentialService","searchCriterias",function(e,o,n,i,r,s){function u(){this.user=_.clone(t.user),this.updateUsersInfo()}return u.prototype.login=function(t,i){var s={username:t,password:i,submit:"login",_spring_security_remember_me:!0},u={headers:{"Content-Type":"application/x-www-form-urlencoded"}},a=this,c=o.post(e.get("login"),jQuery.param(s),u).then(function(t,e){403===e?(n.$broadcast("NotifyError","SECURITY_LOGIN_INVALID"),a.forceLogout()):200===e&&a.getUserInfos().then(function(t){a.setAuthCookie(t),n.$broadcast("$onAuthenticationSuccess"),n.$broadcast("NotifyInfo","SECURITY_LOGIN_SUCCESS"),n.$broadcast("AuthChange",!0)})});c.then(function(e){if(200===e.status){var o=r.getCredentialsForUserLogin(t);o.then(function(t){r.setCredentials(t)})}})},u.prototype.getUserInfos=function(){return o.get(e.get("authenticatedUser")).then(function(t){return t.data})},u.prototype.setAuthCookie=function(e){this.user.login=e.login,this.user.auth=!0,this.user.password=null,i.put(t.authCookieName,{auth:!0,current:_.omit(e,"password"),login:e.login})},u.prototype.authCookieExists=function(){return!_.isUndefined(i.get(t.authCookieName))},u.prototype.deleteAuthCookie=function(){this.user.login=t.user.login,this.user.password=t.user.password,this.user.auth=t.user.auth,i.remove(t.authCookieName)},u.prototype.logout=function(){var t=this;r.clean(),s.resetAllSearchCriterias(),o.post(e.get("logout")).success(function(){t.forceLogout(),n.$broadcast("NotifyInfo","SECURITY_LOGIN_LOGOUT"),n.$broadcast("AuthChange",!1),n.$broadcast("$onLogoutSuccess")})},u.prototype.forceLogout=function(){this.deleteAuthCookie(),r.clean(),s.resetAllSearchCriterias()},u.prototype.updateUsersInfo=function(){if(this.authCookieExists()){var e=i.get(t.authCookieName);this.user.login=e.login,this.user.auth=e.auth,n.$broadcast("$onAlreadyAuthenticated"),n.$broadcast("AuthChange",e.auth)}},u.prototype.getLogin=function(){return this.authCookieExists()?i.get(t.authCookieName).login:""},u.prototype.getCurrentUser=function(){return this.authCookieExists()?i.get(t.authCookieName).current:void 0},new u}]})}(),function(){"use strict";function t(t,e,o){var n,i=[];return{getCredentialsForUserLogin:function(r){if(!_.isUndefined(i)&&i.length>0&&!_.isUndefined(n))return n;var s=o.defer(),u={params:{size:1e3,direction:"asc",properties:"label",username:r}};return e.get(t.get("credentialsSearch"),u).success(function(t){i=t.content,s.resolve(i)}),n=s.promise},hasCredential:function(t){var e=_.filter(i,function(e){return e.code===t});return e.length>0},setCredentials:function(t){i=t},clean:function(){i=[],n=null}}}angular.module("springbok.security").service("credentialService",t),t.$inject=["endpoints","$http","$q"]}();