!function(){"use-strict";const e=["ngCookies","springbok.core"],t=angular.module("springbok.security",e);t.run(["endpoints",function(e){e.add("accounts","accounts"),e.add("currentAccount","accounts/authenticated"),e.add("credentials","credentials")}])}(),function(){"use strict";function e(e,t,n,r){var i=this;i.account=n.account,this.login=function(){n.login().then(function(){e.$emit("Notify","success","SECURITY_LOGIN_SUCCESS"),_.isNull(t.url)||(r.path(t.url),t.url=null)},function(t){"wrongCredentials"===t.reason?e.$emit("Notify","error","SECURITY_LOGIN_INVALID"):e.$emit("Notify","error","ERROR_SERVER")})},this.logout=function(){n.logout(),e.$emit("Notify","warning","SECURITY_LOGIN_LOGOUT"),t.url="/"}}angular.module("springbok.security").controller("authenticationController",e),e.$inject=["$scope","authenticationRedirect","authenticationService","$location"]}(),function(){"use strict";angular.module("springbok.security").value("authenticationRedirect",{url:null})}(),function(){"use strict";function e(e,t,n,r,i,o){function c(){s.account={infos:{},username:"",password:"",authenticated:!1}}function u(){var e="Basic ";return e+=n.encodeToBase64(s.account.username+":"+s.account.password)}var s=this;c(),s.logout=function(){c(),delete t.defaults.headers.common.Authorization,i.clean(),o.resetAllSearchCriterias()},s.login=function(){var n=e.defer();return t.defaults.headers.common.Authorization=u(),t.get(r.get("currentAccount")).then(function(e){200===e.status?(s.account.infos=e.data,s.account.authenticated=!0,i.getCredentialsForUsername(s.account.username),n.resolve(e.infos)):n.reject({reason:"serverError"})},function(e){s.logout(),403===e.status||401===e.status?n.reject({reason:"wrongCredentials"}):n.reject({reason:"serverError"})}),n.promise},s.getCurrentAccount=function(){return s.account.infos}}angular.module("springbok.security").service("authenticationService",e),e.$inject=["$q","$http","encryptionUtils","endpoints","credentialService","searchCriterias"]}(),function(){"use strict";function e(e,t,n){var r,i=[];return{getCredentialsForUsername:function(o){if(!_.isUndefined(i)&&i.length>0&&!_.isUndefined(r))return r;var c=n.defer(),u={params:{size:1e3,direction:"asc",properties:"label",username:o}};return t.get(e.get("credentials")+"/search",u).success(function(e){i=e.content,c.resolve(i)}),c.promise},hasCredential:function(e){var t=_.filter(i,function(t){return t.code===e});return t.length>0},setCredentials:function(e){i=e},clean:function(){i=[],r=null}}}angular.module("springbok.security").service("credentialService",e),e.$inject=["endpoints","$http","$q"]}();